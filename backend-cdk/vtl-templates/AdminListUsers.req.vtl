#set( $gqlArgs = $context.arguments )
$util.qr($ctx.log.info("AdminListUsers.req.vtl - Input arguments: $util.toJson($gqlArgs)"))

#set( $limit = $util.defaultIfNull($gqlArgs.limit, 10) )
#set( $rawNextToken = $util.defaultIfNullOrBlank($gqlArgs.nextToken, null) )
#set( $filterValue = $gqlArgs.filter )

#if( !$util.isNull($filterValue) )
  $util.qr($ctx.log.info("AdminListUsers.req.vtl - Filter provided: $util.toJson($filterValue)"))
#else
  $util.qr($ctx.log.info("AdminListUsers.req.vtl - No filter provided."))
#end

#set( $payloadMap = {
  "limit": $limit,
  "identity": $context.identity
})

#if( !$util.isNull($rawNextToken) )
  $util.qr($payloadMap.put("nextToken", "$rawNextToken"))
#else
  $util.qr($payloadMap.put("nextToken", $null))
#end

#if( !$util.isNull($filterValue) )
  $util.qr($payloadMap.put("filter", $filterValue))
#else
  $util.qr($payloadMap.put("filter", $null))
#end

## ðŸ’¡ CRITICAL FIX â€” wrap entire final object with $util.toJson
$util.toJson({
  "version": "2017-02-28",
  "operation": "Invoke",
  "payload": $payloadMap
})
