#set( $input = $context.args.input )
#set( $itemId = $util.autoId() )
#set( $now = $util.time.nowISO8601() )
#set( $adminSub = $context.identity.sub )

#if( $util.isNullOrBlank($input.targetUserId) )
  $util.error("targetUserId is required", "ValidationException")
#end
#if( $util.isNullOrBlank($input.type) )
  $util.error("type is required", "ValidationException")
#end
#if( $util.isNull($input.amount) )
  $util.error("amount is required", "ValidationException")
#end

## Build the item without 'id'
#set( $attributes = {
  "owner": $input.targetUserId,
  "type": $input.type,
  "amount": $input.amount,
  "createdAt": $now,
  "updatedAt": $now,
  "createdByAdmin": $adminSub
} )

#if( $input.containsKey("description") )
  $util.qr($attributes.put("description", $input.description))
#end

#if( $context.identity.sourceIp && $context.identity.sourceIp.size() > 0 )
  $util.qr($attributes.put("createdByIp", $context.identity.sourceIp[0]))
#end

#if( $context.identity.groups && !$context.identity.groups.isEmpty() )
  $util.qr($attributes.put("adminGroups", $context.identity.groups))
#end

$util.toJson({
  "version": "2018-05-29",
  "operation": "PutItem",
  "key": {
    "id": $util.dynamodb.toDynamoDB($itemId)
  },
  "attributeValues": $util.dynamodb.toMapValues($attributes),
  "condition": {
    "expression": "attribute_not_exists(id)"
  }
})
