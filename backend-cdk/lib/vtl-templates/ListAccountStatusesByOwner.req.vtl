## VTL Request Template for Query.listAccountStatuses
## Fetches account statuses based on owner, supports pagination.
## Differentiates between admin and non-admin users for owner filtering.

#set( $limit = $util.defaultIfNull($context.args.limit, 1) ) ## Default limit might be 1 for status
#set( $nextToken = $util.defaultIfNullOrBlank($context.args.nextToken, null) )

#set( $ownerIdToQuery = $context.identity.sub ) ## Default to logged-in user's sub

#if( $context.identity.groups && $context.identity.groups.contains("Admin") )
  ## User is an Admin
  #if( $context.args.filter && $context.args.filter.owner && $context.args.filter.owner.eq )
    ## Admin is providing a specific owner ID to query
    #set( $ownerIdToQuery = $context.args.filter.owner.eq )
  #else
    ## Admin did not provide an owner filter. Consider erroring or defaulting.
    // $util.error("Admin users must specify an owner filter for account status.", "ValidationException")
  #end
#end

{
  "version": "2018-05-29",
  "operation": "Query",
  "index": "byOwner",
  "query": {
    "expression": "#ownerAttribute = :ownerValue",
    "expressionNames": {
      "#ownerAttribute": "owner"
    },
    "expressionValues": {
      ":ownerValue": $util.dynamodb.toDynamoDBJson($ownerIdToQuery)
    }
  },
  "limit": $limit,
  #if( $nextToken )
    "nextToken": $util.toJson($nextToken)
  #end
}